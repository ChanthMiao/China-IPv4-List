# This is a basic workflow to help you get started with Actions

name: Build China IPv4 list.

# Controls when the workflow will run
on:
  workflow_dispatch:
  schedule:
    - cron: "0 22 * * *"
  push:
    branches:
      - main
    paths-ignore:
      - "**/README.md"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Setup Go environment
        uses: actions/setup-go@v2

      - name: Setup Rust environmet
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install packages.
        run: |
          sudo apt-get update && sudo apt-get install -y bgpdump
          cargo install bgptools
          go get github.com/zhanhb/cidr-merger
        shell: bash

      - name: Set variables
        run: |
          echo "PATH=$(go env GOPATH)/bin:${PATH}" >> $GITHUB_ENV
          echo "TAG_NAME=$(date -u +%Y.%m.%d)" >> $GITHUB_ENV
          echo "RELEASE_NAME=$(date -u +%Y.%m.%d)" >> $GITHUB_ENV
        shell: bash

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          ref: main

      - name: Generate AS table
        run: curl -sSL https://bgp.potaroo.net/cidr/autnums.html | awk '-F[<>]' '{print $3,$5}' | grep '^AS' > asnames.txt
        shell: bash

      - name: Fetch bgp data.
        run: |
          wget -O rib.bz2 "http://archive.routeviews.org/dnszones/rib.bz2"

      - name: Dump bgp date.
        run: |
          echo "running bgpdump ..."
          bgpdump -m -O rib.txt rib.bz2
          echo "finish bgpdump"
        shell: bash

      - name: Generate China IPv4 list
        run: |
          cat asnames.txt|grep -P "CN\$"|grep -vPi "AS45102"|awk '{gsub(/AS/, ""); print $1}' > cnasn.list
          cat cnasn.list|xargs bgptools -b rib.txt|cidr-merger -s|grep -Fv ':' > cn.txt
        shell: bash

      - name: Generate cn.txt sha256 hash
        run: |
          sha256sum cn.txt > cn.txt.sha256sum
        shell: bash

      - name: Move files to publish directory
        run: |
          mkdir -p publish
          mv cn.txt cn.txt.sha256sum ./publish
        shell: bash

      - name: Git push assets to "release" branch
        run: |
          cd publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add cn.txt cn.txt.sha256sum
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add China-IPv6-List "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u China-IPv6-List release
        shell: bash

      - name: Create a release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: ${{ env.RELEASE_NAME }}
          draft: false
          prerelease: false

      - name: Upload cn.txt
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish/cn.txt
          asset_name: 
          asset_content_type: text/plain

      - name: Upload cn.txt.sha256sum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish/cn.txt.sha256sum
          asset_name: cn.txt.sha256sum
          asset_content_type: text/plain
